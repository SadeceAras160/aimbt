local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local Aiming = false
local Target = nil

-- Ayarlar
local FOV = 100
local Smoothness = 1 -- Daha hızlı kitlenme
local MinDistanceFromCamera = 10 -- Çok yakın oyunculara kilitlenme (studs)

-- FOV Çemberi
local FOVCircle = Drawing.new("Circle")
FOVCircle.Filled = false
FOVCircle.Transparency = 0.7
FOVCircle.Thickness = 1
FOVCircle.NumSides = 64
FOVCircle.Radius = FOV
FOVCircle.Visible = true
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

-- Görünürlük kontrolü
local function isVisible(targetCharacter)
	if not targetCharacter then return false end
	local head = targetCharacter:FindFirstChild("Head")
	if not head then return false end

	local origin = Camera.CFrame.Position
	local direction = (head.Position - origin).Unit * 1000

	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, Camera}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

	local raycastResult = workspace:Raycast(origin, direction, raycastParams)
	if raycastResult and raycastResult.Instance then
		if raycastResult.Instance:IsDescendantOf(targetCharacter) or (raycastResult.Position - head.Position).Magnitude < 2 then
			return true
		end
	end
	return false
end

-- En yakın görünür oyuncuyu bul
local function getClosestVisiblePlayer()
	local mousePos = UserInputService:GetMouseLocation()
	local closestPlayer = nil
	local shortestDistance = FOV

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
			local head = player.Character.Head
			local distanceToCamera = (head.Position - Camera.CFrame.Position).Magnitude

			-- Çok yakındaki oyunculara kilitlenme
			if distanceToCamera > MinDistanceFromCamera then
				if isVisible(player.Character) then
					local screenPoint, onScreen = Camera:WorldToScreenPoint(head.Position)
					if onScreen then
						local dist = (Vector2.new(mousePos.X, mousePos.Y) - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
						if dist < shortestDistance then
							shortestDistance = dist
							closestPlayer = player
						end
					end
				end
			end
		end
	end
	return closestPlayer
end

-- E tuşuyla aç/kapa
UserInputService.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.E then
		Aiming = not Aiming
		if not Aiming then
			Target = nil
		end
	end
end)

-- Ana döngü
RunService.RenderStepped:Connect(function()
	-- FOV çemberi renk döngüsü
	local hue = (tick() * 60) % 360 / 360
	FOVCircle.Color = Color3.fromHSV(hue, 1, 1)

	-- Mouse pozisyonuna göre güncelle
	local mousePos = UserInputService:GetMouseLocation()
	FOVCircle.Position = Vector2.new(mousePos.X, mousePos.Y)
	FOVCircle.Radius = FOV

	if Aiming then
		if not Target or not Target.Character or not Target.Character:FindFirstChild("Head") then
			Target = getClosestVisiblePlayer()
		end

		if Target and Target.Character and Target.Character:FindFirstChild("Head") then
			local camPos = Camera.CFrame.Position
			local headPos = Target.Character.Head.Position

			local currentLook = Camera.CFrame.LookVector
			local desiredDir = (headPos - camPos).Unit
			local newLook = currentLook:Lerp(desiredDir, Smoothness)

			Camera.CFrame = CFrame.new(camPos, camPos + newLook)
		else
			Aiming = false
			Target = nil
		end
	end
end)
